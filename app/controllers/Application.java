package controllers;

import java.util.ArrayList;

import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.amazonaws.services.dynamodbv2.document.DynamoDB;
import com.amazonaws.services.dynamodbv2.document.Item;
import com.amazonaws.services.dynamodbv2.document.Table;
import com.fasterxml.jackson.databind.ObjectMapper;

import play.*;
import play.mvc.*;

import views.html.*;

import model.Software;
import model.StringGenerator;

public class Application extends Controller {
	public static final String AWS_ACCESS_KEY = "aws.access.key";
	public static final String AWS_SECRET_KEY = "aws.secret.key";

    public Result index() {
    	String accessKey = Play.application().configuration().getString(AWS_ACCESS_KEY);
        String secretKey = Play.application().configuration().getString(AWS_SECRET_KEY);
        AmazonDynamoDBClient dynamoDBClient = new AmazonDynamoDBClient(new BasicAWSCredentials(accessKey, secretKey));
        DynamoDB dynamoDB = new DynamoDB(dynamoDBClient);
        Table table = dynamoDB.getTable("MalwareCatalog");
        
        //table.query(spec)
        
		Item item = table.getItem("MalwareID", "MW-001");
		String desc = (String) item.get("Description");
    	
    	Software sw1 = new Software();
    	sw1.name = "MS Word";
    	sw1.desc = "Word processing";
    	
    	Software sw2 = new Software();
    	sw2.name = "Safari";
    	//sw2.desc = "Web Browser";
    	sw2.desc = desc;
    	
    	ArrayList list = new ArrayList();
    	list.add(sw1);
    	list.add(sw2);
    	
        return ok(index.render(list));
    }

    public WebSocket<String> socket() {
        return WebSocket.whenReady((in, out) -> {
            // For each event received on the socket,
            in.onMessage(System.out::println);

            // When the socket is closed.
            in.onClose(() -> System.out.println("Disconnected"));
            
            Software sw1 = new Software();
        	sw1.name = "MS Word";
        	sw1.desc = "Word processing";
        	
        	Software sw2 = new Software();
        	sw2.name = "Safari";
        	sw2.desc = "Web Browser";
        	
        	ArrayList list = new ArrayList();
        	list.add(sw1);
        	list.add(sw2);
        	
        	ObjectMapper mapper = new ObjectMapper();
        	String json = mapper.writeValueAsString(list);
            
            //out.write(json);
            
        	for (int i=0; i<10; i++) {
            	out.write(StringGenerator.generateRandomString(10, StringGenerator.Mode.ALPHA_NUM));
            	long sleepTime = (long)(Math.random()*7000);			
    			Thread.sleep(sleepTime);
            }
        });
    }
}
